version: 0.2
###
# This build project exports any variables needed for later stages and actions,
# and builds the template configs used to launch the CloudFormation templates

env:
  shell: bash
  variables:
    DEBIAN_FRONTEND: "noninteractive"
  exported-variables:
    - APP_STACK_FILE
    - BUCKET_PATH
    - CODEBUILD_BUILD_NUMBER
    - LAMBDA_STACK_FILE
    - MAX_AGE
    - PRODUCT_COMPONENT
    - PRODUCT_NAME
    - SLACK_ALERT_CHANNEL
    - SLACK_DEPLOY_NOTIFICATION
    - SOURCE_BUCKET

phases:

  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo Running on $(lsb_release -d | cut -f2)
      - echo aws-cli version $(aws --version)
      - export CUR_PIPELINE_FINGERPRINT=$(md5sum cicd/static-page/pipeline/pipeline.yaml | awk '{print $1}')
      - # This next bit checks if the running pipeline is out of sync with the pipeline in the
      - # current code revision. If it is it re-launches itself! For a normal branch commit the
      - # pipeline is set to autorun on update so it will restart automatically and launch the
      - # latest revision on the branch. For a rollback we dont want it to restart automatically as
      - # we need to run a specific commit, not the latest. In this case the pipeline is set NOT to
      - # autorun on update. It will have to be manually started after the rollback pipeline
      - # has finished launching
      - | 
          if [[ $PIPELINE_FINGERPRINT != $CUR_PIPELINE_FINGERPRINT ]]; then
            echo existing pipeline is out of sync with current code revision, relaunching!
            cd cicd/static-page/pipeline/
            ./deploy_pipeline.sh -e ${ENVIRONMENT:0:4} -b $SRC_BRANCH
            # pipeline execution should now stop if this is a rollback, 
            # or restart automatically if this a normal branch deploy
            exit 1
          else
            echo existing pipeline is in sync with current code revision, proceeding with the deploy!
          fi
    finally:
      - #echo This always runs even if the update or install command fails


  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - echo source branch is $SRC_BRANCH
      - echo clean branch is $CLEAN_BRANCH
      - echo Environment is $ENVIRONMENT
      - echo generating environment vars...
      - cicd/gen_env_vars.py --env $ENVIRONMENT --clean-branch $CLEAN_BRANCH --conf cicd/static-page/config.ini > env.txt
      - echo loading config..
      - set -a ; source env.txt ; set +a
    finally:
      - #echo This always runs
      - #notify Slack on failure

  build:
    commands:
      - echo Entered the build phase...
      # rasd static cloudformation template config
      - echo Generating the RASD static site stack template config
      - cicd/gen_template_config.py --template cicd/static-page/pipeline/rasd_static_template_config.j2 > cicd/app/rasd_static_template_config.json
    finally:
      - #echo This always runs
      - #notify Slack on failure


  post_build:
    commands:
      - echo all looking good üëç Stack will be launched on https://${SUB_DOMAIN}.${HOSTED_ZONE}
      - #notify Slack

artifacts:
  files:
    - cicd/static-page/app/$APP_STACK_FILE
    - cicd/static-page/app/rasd_static_template_config.json
  name: BuildTemplateConfigArtifact
  discard-paths: no
